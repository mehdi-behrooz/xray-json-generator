name: Build and Release

on:
  push:

jobs:
  build:
    name: Build for Linux Architectures
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm]
        goarm: [7]
        include:
          - goos: linux
            goarch: amd64
            suffix: amd64.bin
          - goos: linux
            goarch: arm
            goarm: 7
            suffix: armv7.bin
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"

      - name: Build
        env:
          GOOS: linux
          GOARCH: ${{ matrix.goarch }}
          GOARM: 7
          CGO_ENABLED: 0
          OUTPUT: xray-json-generator
          VERSION: ${{ github.ref_name }}
          SUFFIX: ${{ matrix.suffix }}

        run: |
          mkdir release/
          go build -o release/${OUTPUT}-${VERSION}-${SUFFIX}

      - name: Upload binary file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-file-${{ matrix.suffix }}
          path: release/*

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binary-file-*
          path: release/
          merge-multiple: true
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: "Release ${{ github.ref_name }}"
          files: release/*
